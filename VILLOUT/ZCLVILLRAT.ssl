/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_ZCLVILLRAT          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;

procedure start
begin
end

procedure critter_p_proc
begin
  if (obj_can_see_obj(self_obj, dude_obj) and ( (local_var(LVAR_Hostile) == 1) or (global_var(GVAR_ENEMY_VAULT_VILLAGE) == 2) )) then
    attack(dude_obj);
end

procedure destroy_p_proc
begin
   set_global_var(GVAR_VAULT_MONSTER_COUNT, global_var(GVAR_VAULT_MONSTER_COUNT) - 1);
   if (global_var(GVAR_VAULT_MONSTER_COUNT) == 0) then
      display_msg(mstr(200));
end

procedure use_skill_on_p_proc
begin
  if (action_being_used == SKILL_STEAL) then
    script_overrides;
end

procedure look_at_p_proc
begin
  script_overrides;
  display_msg(message_str(SCRIPT_ZCLVILLRAT, 100));
end

procedure description_p_proc
begin
  script_overrides;
  if (local_var(2) == 1) then
      display_msg(message_str(SCRIPT_ZCLVILLRAT, 102));
  else
      display_msg(message_str(SCRIPT_ZCLVILLRAT, 101));
end

procedure damage_p_proc
begin
  if (source_obj == dude_obj) then
  begin
    set_local_var(LVAR_Hostile, 2);
    set_global_var(GVAR_ENEMY_VAULT_VILLAGE,2);
    //set_global_var(GVAR_ENEMY_VAULT_VILLAGE,1);
  end
end

procedure map_enter_p_proc
begin

 if ( ((game_time - global_var(GVAR_SERVANT_RAID_DATE)) >= ONE_GAME_MONTH) and (((global_var(GVAR_QUEST_VAULT_VILLAGE) < VILLAGE_QUEST_DELIVERED_GUNS) and (global_var(GVAR_QUEST_VAULT_VILLAGE) > 0)) or (global_var(GVAR_QUEST_VAULT_SERVANT) > 0) and (global_var(GVAR_VAULT_SERVANT) != SERVANT_FINISHED_DIPLOMATIC) and (global_var(GVAR_QUEST_VAULT_VILLAGE) < VILLAGE_QUEST_DELIVERED_GUNS)) )  then begin
 //if ( ((global_var(GVAR_VAULT_SERVANT) == 3) and (global_var(GVAR_VAULT_VILLAGE) != 4) and ((game_time - global_var(GVAR_SERVANT_RAID_DATE)) >= ONE_GAME_MONTH) ) or (global_var(GVAR_VAULT_SERVANT) == 4)) then begin   
    kill_critter(self_obj, random(ANIM_fall_back_blood_sf, ANIM_fall_front_blood_sf));
 end else begin
   critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_VAULT_VILLAGERS);
   critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_RAT);
   add_timer_event(self_obj, game_ticks(random(1, 5)), 0);
 end
end

procedure timed_event_p_proc
begin
  if (not combat_is_initialized and ((critter_state(self_obj) bwand 1) == 0)) then
  begin
    reg_anim_clear( self_obj);
    reg_anim_begin();
    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
    reg_anim_end();
  end
  add_timer_event(self_obj, game_ticks(random(3, 5)), 0);
end

procedure use_obj_on_p_proc
begin
end