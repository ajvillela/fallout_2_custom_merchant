Included in this file is the directory structure and update procedures for scripts,
message files, maps, and any other files that pertain primarily to scripters.

<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

Table of Contents
	I. Directory Structure
		A. Scripts
		B. Data
	II. Naming Conventions
		A. Global Vars
		B. Map Vars
		C. Local Vars
		D. Script Names
			1. Naming Scripts
			2. City Names
			3. Type Names
		E. Pid Defines
		F. Experience Point Defines
		G. Reputation Point Defines
		H. AI Packet Defines
		I. Team Defines
		J. Script Name Defines

<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

I.  Directory Structure

Below is the directory structure for SourceSafe and the network drive for the scripts
and files which pertain to them. Please, make sure that files go into the proper 
directory, as it could cause confusion at a later times, should anyone need to find
specific files.

	A. Scripts
		Fallout2\Scripts\
			This is where text files explaining directory structure, 
			script procedures, and anything else would be stored. No
			scripts	should be placed in here.

		Fallout2\Scripts\Arroyo
			This is were all of the scripts for Arroyo are located. 

		Fallout2\Scripts\Generic\
			This is where generic scripts would be placed. This would be 
			mainly for things like locked doors, trapped doors, locked 
			and trapped doors, containers, and so forth. 
	
		Fallout2\Scripts\Headers\
			This is where any includable files would be added. Primarily, 
			these would be: Define.h, Scripts.h, Global.h, ItemPid.h, 
			ScenePid.h, CritrPid.h, Teams.h, AIPack.h, RepPoint.h, 
			ExpPoint.h, ModReact.ssl (or ModReact.h), and Commands.h.

		Fallout2\Scripts\Main\
			This is where the scripts for the heads would be placed. 

		Fallout2\Scripts\Maps\
			This is where all the map scripts would be placed for the 
			game.

		Fallout2\Scripts\Party\
			Anyone who could be part of the party will be placed here. 

		Fallout2\Scripts\RndEnctr\
			All random encounter map scripts, special scripts made for 
			random encounters, etc. will be place here.

		Fallout2\Scripts\Template\
			All templates for scripting will be placed here. Most 
			importantly will be the dialog scripts, locked containers, 
			trapped containers, locked and trapped doors, etc. 

	B. Data
		Fallout2\Cd\Data\
			Scripters should not place anything in this directory.

		Fallout2\Cd\Data\Data\
			This is where the global variable .gam file and the AI.txt
			file are kept.

		Fallout2\Cd\Data\Maps\
			This is where all the map variable .gam files will be placed.
			the actual maps are placed in an alternate SourceSafe.

		Fallout2\Cd\Data\Scripts\
			This is where the Scripts.lst file will be placed. The only 
			other files which can be placed in here would be the 
			binaries from compiled scripts.

		Fallout2\Cd\Data\Text\English\Dialog\
			This is where all the message files for scripts are kept.

		Fallout2\Cd\Data\Text\English\Game\
			This is where all the game message files are kepts. 


<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

II. Naming Conventions

Below are the naming conventions which should be followed for variable names and
script names. Please follow this format as it will allow for greater readablity
between all of the programmers.

	A. Global Vars
		Global Vars will be stored in a header file called Global.h,
		located in the \Fallout2\Scripts\Headers\ directory. All global
		vars will be prepended with GVAR_ to differentiate them from all
		other variables.

	B. Map Vars
		Map Vars will be stored in header files in the format of <map name>.h
		and be located in the \Fallout2\Scripts\Headers\ directory. All
		vars will be prepended with MVAR_ to differentiate them from all 
		other variables.

	C. Local Vars
		Local Vars will be stored in the script itself. The total number of
		Local Vars must be added into scripts.lst so that they may be 
		allocated memory in the game. Scripts.lst is located in the
		\Fallout2\Cd\Data\Scripts\ directory. All vars will be prepended with
		LVAR_ to differentiate them from all other variables.

	D. Script Names

		1. Naming Scripts
			All scripts will follow the same naming convention whether 
			they are spatial scripts, critters, or scenery. The 
			conventions which is to be used is:
				First Character is the City Name
				Second Character is the Type Name
				Remaining Six Characters are the Name
			All scripts will end with the suffix of .ssl. An example from 
			Fallout would be: NCGhoul.ssl  (Necropolis, Critter, Ghoul)

		2. City Names
			The following are the Abbreviations which are to be used for 
			the City field of the Script name.

			A == Arroyo
			K == Klamath
			D == The Den
			M == Modoc
			G == Gecko
			V == VaultCity
			R == Redding
			W == Sierra Army Depot (Weapons Depot)
			N == New Reno
			H == Broken Hills
			C == Colusa
			B == Vault 15 (Buried Vault)
			S == Shady Sands
			O == Vault 13 (Original Vault)
			E == Military Base (Excavated Base)
			F == San Francisco
			E == Random Encounter
			Z == Generic Critter/Item
			I == Raiders
			Q == Enclave

		3. Type Names
			The following are the Abbreviations which are to be used for 
			the Type field of the Script name.

			C == Critter  	(Default person or animal)
			I == Items	(Default items [ie Radios])
			S == Scenery	(Default Scenery)
			T == Spatial	(Spatial scripts)
			P == Party	(Used for Party Members)
			H == Head	(Any Script for a Head Character)
			W == Walls	(Default Walls)

	E. Pid Defines
		All prototypes which are placed in their corespondind header files
		(Scenery in ScenePid.h, Items in ItemPid.h, and Critters in 
		CritrPid.h) will have a prepended PID_ to their names so as to 
		differentiate them from all other defines in the script.

	F. Experience Point Defines
		All experience points that are awarded in the game will be stored in 
		the file ExpPoint.h. This is to allow the designers to balance the 
		entire game by only altering one file rather than searching through
		all the scripts. All experience point defines will be prepended with
		EXP_ to differentiate them from all other defines in the scripts.

	G. Reputation Point Defines
		All reputation points that are awarded in the game will be stored in
		the file RepPoint.h. This is to allow the designers to balance 
		reputation for the entire game through only one file. All reputation
		defines will be prepended with REP_ to differentiate them from all 
		other defines in the scripts.

	H. AI Packets Defines
		All AI Packets used in the game will be referenced in AIPack.h. This
		will allow the scripters to force AI Packets onto every critter from
		the scripts. All AI defines will be prepended by AI_ to 
		differentiate them from all other defines in the scripts.

	I. Teams Defines
		All Team Names for the game will be stored in the file Teams.h. This
		will allow scripters the ability to assign critters to teams from the 
		scripts. All Team Names will be prepended by TEAM_ to differentiate 
		them from all other defines in the scripts.

	J. Script Name Defines
		All Script Name defines will come directly from Scripts.lst in the 
		exact order in which Scripts.lst is in. The defines will be stored 
		in the file Scripts.h. All Script Name defines will be prepended with
		SCRIPT_ to differentiate them from all other defines in the scripts.

<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
