/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_EPAC4          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure talk_two_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;

variable Only_Once := 0;

procedure start
begin
  add_timer_event(self_obj, game_ticks(random(4, 7)), 3);
end

procedure combat_p_proc
begin
  script_overrides;
end

procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if ((local_var(LVAR_Hostile) != 0) and (obj_can_see_obj(self_obj,dude_obj))) then begin
       set_local_var(LVAR_Hostile,1);
       self_attack_dude;
       //Macro made by Tom to keep the critter fleeing.
   end

   if (global_var(GVAR_KILL_HOLOGRAMS)==1) then begin
       destroy_object(self_obj);
   end

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   /*if (target_obj) then begin
      if (obj_pid(target_obj) == PID_PULSE_GRENADE) then begin
         script_overrides;
         critter_damage(self_obj, 99999);
      end
   end*/
   
   if (weapon_dmg_type(target_obj) == DMG_emp) then begin
      script_overrides;
      critter_damage(self_obj, 99999);
   end else begin
      script_overrides;
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   script_overrides;
end

procedure talk_p_proc
begin
  if (global_var(GVAR_MAGNETIC_FIELD) == 0) then
    float_msg(self_obj, message_str(NAME, random(333, 335)), FLOAT_MSG_YELLOW);
  else
    call talk_two_p_proc;
end

procedure destroy_p_proc
begin
  if (source_obj == dude_obj) then
  begin
    set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
    if (metarule(51, self_obj) == 2) then
    begin
      if (source_obj == dude_obj) then
      begin
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then
          set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then
          set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then
          set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then
          set_global_var(GVAR_KARMA_DEFENDER, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) > -250) then
          set_global_var(GVAR_KARMA_WANDERER, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) > -500) then
          set_global_var(GVAR_KARMA_BETRAYER, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) > -750) then
          set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
        else if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then
          set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTES, 1);
        else
          set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
      end
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_BAD_MONSTER) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then
    begin
      set_global_var(GVAR_CHAMPION_REPUTATION, 1);
      set_global_var(GVAR_BERSERKER_REPUTATION, 0);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then
    begin
      set_global_var(GVAR_BERSERKER_REPUTATION, 1);
      set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
    debug_msg("Player gains " + -10 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then
      set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then
      set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then
      set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then
      set_global_var(GVAR_KARMA_DEFENDER, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) > -250) then
      set_global_var(GVAR_KARMA_WANDERER, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) > -500) then
      set_global_var(GVAR_KARMA_BETRAYER, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) > -750) then
      set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
    else if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then
      set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTES, 1);
    else
      set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
  end
end

procedure look_at_p_proc
begin
  script_overrides;
  if (local_var(LVAR_Herebefore) == 0) then
    display_msg(message_str(NAME, 100));
  else
    display_msg(message_str(NAME, 101));
end

procedure description_p_proc
begin
  script_overrides;
  display_msg(message_str(NAME, 102));
end

procedure use_skill_on_p_proc
begin
end


procedure map_enter_p_proc
begin
  Only_Once := 0;
end

procedure timed_event_p_proc
begin

  if ( (fixed_param == 3) and (global_var(GVAR_MAGNETIC_FIELD) == 0) ) then
  begin
    if (((critter_state(self_obj) bwand 2) == 0) and not combat_is_initialized) then
    begin
      float_msg(self_obj, message_str(NAME, random(336, 345)), FLOAT_MSG_RED);
      add_timer_event(self_obj, game_ticks(random(5, 7)), 3);
    end
  end
end

procedure talk_two_p_proc
begin
  if (global_var(GVAR_FIX_VOICECOMP) == 1) then
    float_msg(self_obj, message_str(NAME, random(330, 332)), FLOAT_MSG_YELLOW);
  else if ((global_var(GVAR_FIX_VOICECOMP) == 2) /*or (global_var(GVAR_FIX_VOICECOMP) == 3)*/) then
  begin
    start_gdialog(NAME, self_obj, 4, -1, -1);
    gsay_start;
    call Node011;
    gsay_end;
    end_dialogue;
  end
  else if (global_var(GVAR_FIX_VOICECOMP) == 4) then
  begin
    start_gdialog(NAME, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(LVAR_Herebefore) == 0) then begin
      call Node015;
    end else begin
      call Node012;
    end
    gsay_end;
    end_dialogue;
    set_global_var(GVAR_FIX_VOICECOMP, 5);
  end
  else if (global_var(GVAR_FIX_VOICECOMP) == 5) then
    float_msg(self_obj, message_str(NAME, random(330, 332)), FLOAT_MSG_YELLOW);
  else
  begin
    start_gdialog(NAME, self_obj, 4, -1, -1);
    gsay_start;
    call Node001;
    gsay_end;
    end_dialogue;
  end
end

procedure Node998
begin
  set_local_var(LVAR_Hostile, 2);
end

procedure Node999
begin
  debug_msg("LVAR_Herebefore == " + local_var(LVAR_Herebefore));
  if (local_var(LVAR_Herebefore) == 0) then
    set_local_var(LVAR_Herebefore, 1);
end

procedure Node001
begin
  gsay_reply(NAME, 200);
  giq_option(4, NAME, 201, Node002, 50);
  NOption(mstr(203)+obj_name(dude_obj)+mstr(204),Node002,004);
  giq_option(4, NAME, 202, Node003, 50);
end

procedure Node002
begin
  gsay_reply(NAME, 210);
  giq_option(4, NAME, 211, Node004, 50);
  BOption(400,Node014,004);
end

procedure Node003
begin
  gsay_reply(NAME, 220);
  giq_option(4, NAME, 221, Node004, 50);
  if (get_critter_stat(dude_obj, STAT_iq) >= 7) then
    giq_option(4, NAME, 222, Node006, 50);
end

procedure Node004
begin
  gsay_reply(NAME, 230);
  giq_option(4, NAME, 231, Node005, 50);
  if (get_critter_stat(dude_obj, STAT_iq) >= 7) then
    giq_option(4, NAME, 232, Node006, 50);
end

procedure Node005
begin
  gsay_reply(NAME, 240);
  giq_option(4, NAME, 241, Node007, 50);
  giq_option(4, NAME, 242, Node006, 50);
end

procedure Node006
begin
  gsay_reply(NAME, 250);
  giq_option(4, NAME, 251, Node008, 50);
end

procedure Node007
begin
  gsay_reply(NAME, 260);
  giq_option(4, NAME, 261, Node009, 50);
  giq_option(4, NAME, 262, Node010, 50);
end

procedure Node008
begin
  gsay_reply(NAME, 270);
  giq_option(4, NAME, 271, Node009, 50);
end

procedure Node009
begin
  gsay_reply(NAME, 280);
  giq_option(4, NAME, 281, Node999, 50);
  if (global_var(GVAR_FIX_VOICECOMP) < 2) then
   set_global_var(GVAR_FIX_VOICECOMP, 2);
end

procedure Node010
begin
  gsay_reply(NAME, 290);
  giq_option(4, NAME, 291, Node999, 50);
  set_global_var(GVAR_FIX_VOICECOMP, 1);
end

procedure Node011
begin
  gsay_reply(NAME, 300);
  giq_option(4, NAME, 301, Node999, 50);
end

procedure Node012
begin
  gsay_reply(NAME, 310);
  giq_option(4, NAME, 311, Node013, 50);
end

procedure Node013
begin
  variable item;
  gsay_reply(NAME, 320);
  giq_option(4, NAME, 321, Node999, 50);
  if (has_skill(dude_obj, SKILL_CONVERSANT) > 70) then
    giq_option(4, NAME, 322, Node999, 50);
         
  item:=create_object(PID_SECURITY_ROOMS_KEY_CARD,0,0);
  add_obj_to_inven(dude_obj,item);
  
end

procedure Node014 begin
   Reply(401);
   giq_option(4, NAME, 221, Node004, 50);
   if (get_critter_stat(dude_obj, STAT_iq) >= 7) then
      giq_option(4, NAME, 222, Node006, 50);
end

procedure Node015 begin
   Reply(410);
   giq_option(4, NAME, 411, Node013, 50);
   giq_option(4, NAME, 412, Node016, 50);
   giq_option(4, NAME, 413, Node016, 50);
end

procedure Node016 begin
   Reply(420);
   giq_option(4, NAME, 421, Node013, 50);
end