/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\EPAMAIN.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_EPAS2          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\ModReact.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure spatial_p_proc;
procedure doPain;

variable my_boots;
variable worn;
variable k;

procedure start begin
end

procedure spatial_p_proc begin
   if ((obj_pid(source_obj) == PID_FRUIT_FLY) or (obj_pid(critter_inven_obj(source_obj,INVEN_TYPE_RIGHT_HAND)) == PID_GAS_MASK) or (obj_pid(critter_inven_obj(source_obj,INVEN_TYPE_LEFT_HAND)) == PID_GAS_MASK)) then begin
   //if (obj_carrying_pid_obj(source_obj, PID_GAS_MASK)) then begin
      //do nothing
   end else begin
      call doPain;
   end
end

procedure doPain begin
   if (critter_inven_obj(source_obj,INVEN_TYPE_WORN) != 0) then
      worn := obj_pid(critter_inven_obj(source_obj,INVEN_TYPE_WORN));
   if ( (worn != PID_POWERED_ARMOR) and (worn != PID_HARDENED_POWER_ARMOR) and (worn != PID_ADVANCED_POWER_ARMOR) and (worn != PID_ADVANCED_POWER_ARMOR_MK2) and (worn != PID_ENVIRONMENTAL_ARMOUR) ) then begin
      if ((cur_map_index == MAP_EPA_SUBLEVELS_2) or (map_var(MVAR_Cleaned_Fan) == 0)) then begin
         poison(source_obj, 100);
      end else if (map_var(MVAR_Cleaned_Fan) == 1) then begin
         poison(source_obj, 50);
      end else begin
        if (Current_Distance_From_Obj(source_obj) <= 1) then begin
            if (obj_carrying_pid_obj(source_obj, PID_RUBBER_BOOTS)) then begin
              //if carrying boots ..do boot damage
             //debug_msg("NPC Code");
              k := random(1,100);
              if (k < 2) then begin //1% chance to melt
                 my_boots := obj_carrying_pid_obj(source_obj, PID_RUBBER_BOOTS);
                 rm_obj_from_inven(source_obj, my_boots);
                 destroy_object(my_boots);
                 if (source_obj == dude_obj) then
                    display_msg(mstr(130));
              end
            end else begin
                critter_dmg(source_obj, 2, DMG_plasma);
            end
        end
      end
   end
end