/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_EPAI2          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure timed_event_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node999;

procedure start
begin
  add_timer_event(self_obj, game_ticks(random(5, 10)), 3);
end

procedure timed_event_p_proc
begin
  if (fixed_param == 3) then
  begin
    float_msg(self_obj, message_str(NAME, random(112, 114)), FLOAT_MSG_WHITE);
    add_timer_event(self_obj, game_ticks(random(5, 10)), 3);
  end
end

procedure use_skill_on_p_proc begin
   
   if (action_being_used == SKILL_REPAIR) then begin
      if (local_var(LVAR_Herebefore) == 2) then begin
         script_overrides;
         if (global_var(GVAR_FIX_VOICECOMP) >= 4) then begin
            display_msg(message_str(NAME, 115));
         end else if ((has_skill(source_obj, SKILL_REPAIR) < 76) ) then
            display_msg(message_str(NAME, 108));
         else begin
            display_msg(message_str(NAME, 109));
            set_global_var(GVAR_FIX_VOICECOMP, 4);
            give_xp(500);
         end
      end
   end
end


procedure use_obj_on_p_proc begin
   if ((obj_pid(obj_being_used_with) == PID_MULTI_TOOL) or (obj_pid(obj_being_used_with) == PID_SUPER_TOOL_KIT) ) then begin
      script_overrides;
      if (local_var(LVAR_Herebefore) == 2) then begin
         if (global_var(GVAR_FIX_VOICECOMP) >= 4) then begin
            display_msg(message_str(NAME, 115));
         end else if ((has_skill(source_obj, SKILL_REPAIR) < 56) ) then
            display_msg(message_str(NAME, 108));
         else begin
            display_msg(message_str(NAME, 109));
            set_global_var(GVAR_FIX_VOICECOMP, 4);
            give_xp(500);
         end
      end
   end
end

procedure use_p_proc
begin
  if (combat_is_initialized == 0) then begin
     if (global_var(GVAR_FIX_VOICECOMP) >= 4) then begin
       start_gdialog(NAME, self_obj, 4, -1, -1);
       gsay_start;
       call Node004;
       gsay_end;
       end_dialogue;
     end else begin
       start_gdialog(NAME, self_obj, 4, -1, -1);
       gsay_start;
       call Node001;
       gsay_end;
       end_dialogue;
     end
  end
end

procedure Node001
begin
  gsay_reply(NAME, 100);
  giq_option(4, NAME, 101, Node002, 50);
  if (global_var(GVAR_FIX_VOICECOMP) < 4) then
    giq_option(4, NAME, 102, Node003, 50);
  giq_option(4, NAME, 103, Node999, 50);
end

procedure Node002
begin
  gsay_reply(NAME, 104);
  giq_option(4, NAME, 103, Node999, 50);
end

procedure Node003
begin
  gsay_reply(NAME, 106);
  giq_option(4, NAME, 107, Node999, 50);
  set_local_var(LVAR_Herebefore, 2);
end

procedure Node004
begin
  gsay_reply(NAME, 110);
  giq_option(4, NAME, 111, Node999, 50);
end

procedure Node999
begin
  debug_msg("LVAR_Herebefore == " + local_var(LVAR_Herebefore));
  if (local_var(LVAR_Herebefore) == 0) then
    set_local_var(LVAR_Herebefore, 1);
end