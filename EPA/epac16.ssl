/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_EPAC16          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\ModReact.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;

procedure start
begin
end

procedure critter_p_proc
begin
  if (obj_can_see_obj(self_obj, dude_obj)) then
    attack(dude_obj);
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
  if (action_being_used == 10) then
    script_overrides;
end

procedure damage_p_proc
begin
  if (source_obj == dude_obj) then
    attack(dude_obj);
end

procedure map_enter_p_proc
begin
  critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_RAT);
  critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_RAT);
  add_timer_event(self_obj, game_ticks(random(1, 5)), 0);
end

procedure timed_event_p_proc
begin
  if (not combat_is_initialized and ((critter_state(self_obj) bwand 1) == 0)) then
  begin
    reg_anim_clear( self_obj);
    reg_anim_begin();
    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
    reg_anim_end();
  end
  add_timer_event(self_obj, game_ticks(random(3, 5)), 0);
end

procedure use_obj_on_p_proc begin
   if ((obj_pid(obj_being_used_with) == PID_BUG_SPRAY)) then begin
      kill_critter(self_obj, ANIM_melted_to_nothing_sf);
      //critter_dmg(self_obj,get_critter_stat(self_obj,STAT_current_hp)+10,DMG_plasma);
   end
end