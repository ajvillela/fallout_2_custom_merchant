/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\define.h"
//#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\<TownMapName.h>"

#define NAME                    SCRIPT_ABCHILD          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY     //Global variable name for this Town

#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\command.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\ModReact.h"
#include "D:\BlackIsle\Fallout 2 Mapper\scripts\HEADERS\partybkg.h"

#define LVAR_Flags                      (4)
#define LVAR_Herebefore                 (5)
#define LVAR_Hostile                    (6)
#define LVAR_Personal_Enemy             (7)
#define LVAR_stolen_before              (8)

procedure start;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure map_enter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;

procedure Node001;

procedure start
begin
end

procedure critter_p_proc begin
   if ( (global_var(GVAR_TOWN_REP_ABBEY) == -30) and (obj_can_see_obj(self_obj,dude_obj))) then begin
      Flee_From_Dude
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure timed_event_p_proc
begin
 if (fixed_param == 2) then begin
  if (((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) and
     (not(combat_is_initialized))) then begin
    reg_anim_clear(self_obj);
    reg_anim_begin();
    if (tile_num(self_obj) / 200 > 131) then
     animate_run_to_tile(tile_num_in_direction(tile_num(self_obj),5,4));
    else if (tile_num(self_obj) / 200 < 108) then
     animate_run_to_tile(tile_num_in_direction(tile_num(self_obj),2,4));
    else if (tile_num(self_obj) % 200 < 80) then
     animate_run_to_tile(tile_num_in_direction(tile_num(self_obj),3,4));
    else if (tile_num(self_obj) % 200 > 122) then
     animate_run_to_tile(tile_num_in_direction(tile_num(self_obj),0,4));
    else
     animate_run_to_tile(tile_num_in_direction(tile_num(self_obj),random(0,5),4));
    reg_anim_end();
  end
  add_timer_event(self_obj,game_ticks(random(3,5)),2);
 end
 
 if (fixed_param == 1) and
    (not combat_is_initialized) and
    (self_can_see_dude) and
    (self_distance_from_dude <= 4) then begin
  call Node001;
  add_timer_event(self_obj, random(5,10)*ONE_GAME_SECOND, 1);
 end
end

procedure talk_p_proc
begin
 call Node001;
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      if (global_var(GVAR_TOWN_REP_ABBEY) != -30) then
         set_global_var(GVAR_TOWN_REP_ABBEY, -30);
   end
end

procedure map_enter_p_proc
begin
  critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_ABBEY);
  critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET,AI_CHILD);

 if (self_tile != 16692) then begin
   add_timer_event(self_obj, random(5,10)*ONE_GAME_SECOND, 1);
   add_timer_event(self_obj,game_ticks(random(3,5)),2);
 end
 
end

procedure pickup_p_proc
begin
 if (source_obj == dude_obj) then begin
  if (local_var(LVAR_stolen_before) == 1) then
   attack(dude_obj);
  else begin
   float_msg(self_obj, mstr(500), FLOAT_MSG_RED);
   set_local_var(LVAR_stolen_before, 1);
  end
 end
end

procedure Node001
begin
 floater_rand(200, 204);
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_mstr(101);
end