/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

//This script can be put on inventory objects
//to allow nearby critters to detect when
//dude attempts to steal from the inventory
//object. You will have a map_var(19) called
//Stealing or make a specific version for
//your area.  nbk


#include "..\headers\define.h"
#include "..\headers\navarro.h"

#define NAME                    SCRIPT_CSTOUCH
#define COMMANDER_LOCKER        16673
#define QUINCY_LOCKER           13673
#define RAUL_LOCKER              9725

#include "..\headers\command.h"

#define Lockpick_Exp                    EXP_LOCKPICK_NORMAL
#define STATE_ACTIVE                    (0)
#define STATE_INACTIVE                  (1)

#define Lock_Bonus                      (-20)

procedure start;
procedure timed_event_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure signal_critter;
procedure Set_Lock;
procedure Unlock_Lock;
procedure Lockpick_It;
procedure Lock_It;
procedure Pry_It;

#define LVAR_Locked                     (0)
#define LVAR_Gave_Locks_XP              (1)
#define LVAR_got_plans                  (2)
#define LVAR_got_part                   (3)

variable Skill_Used;
variable Locks_Roll;
variable Tool;
variable Stat_Roll;
variable Crowbar_Strain;

procedure start begin
end

procedure timed_event_p_proc begin
   set_map_var(MVAR_Touched,0);
end

procedure use_p_proc begin
   call signal_critter;

   if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
       script_overrides;
       display_msg(mstr(203));
   end
end

procedure use_skill_on_p_proc begin
   call signal_critter;

   Skill_Used:=action_being_used;
   if (Skill_Used == SKILL_LOCKPICK) then begin
       if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
           call Unlock_Lock;
       end
       else begin
           call Set_Lock;
       end
   end                                                          // End of Skill_Lockpick

end

procedure use_obj_on_p_proc begin
   call signal_critter;

   Tool:=obj_pid(obj_being_used_with);
   if (Tool == PID_LOCKPICKS) then begin
       if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
           call Lockpick_It;
       end
       else begin
           call Lock_It;
       end
   end
   else if (Tool == PID_EXP_LOCKPICK_SET) then begin
       if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
           call Lockpick_It;
       end
       else begin
           call Lock_It;
       end
   end
   else if (Tool == PID_CROWBAR) then begin
       call Pry_It;
   end

end

procedure pickup_p_proc begin
   call signal_critter;
   if (tile_num(self_obj) == COMMANDER_LOCKER) then begin
      if (global_var(GVAR_NAVARRO_FOB) < NAVARRO_HAVE_FOB) then begin
         display_msg(mstr(800));
         give_xp(EXP_RETRIEVE_FOB);
         set_global_var(GVAR_NAVARRO_FOB, NAVARRO_HAVE_FOB);
      end
   end
   if (tile_num(self_obj) == QUINCY_LOCKER) then begin
      if (local_var(LVAR_got_plans) == 0) then begin
         set_local_var(LVAR_got_plans,1);
         display_msg(mstr(810));
         give_xp(EXP_RETRIEVE_PLANS);
      end
   end
   if (tile_num(self_obj) == RAUL_LOCKER) then begin
      if (local_var(LVAR_got_part) == 0) then begin
         set_local_var(LVAR_got_part,1);
         display_msg(mstr(820));
         //give_xp(EXP_RETRIEVE_K9_PART);
      end
   end

end

procedure signal_critter begin
   set_map_var(MVAR_Touched,1);

   //if raul has said ok to take k9 part
   if (map_var(MVAR_Take_It) == 1) then begin
      //only want to open up one locker...not all lockers in Navarro
      if (tile_num(self_obj) == RAUL_LOCKER) then begin
         set_local_var(LVAR_Locked, STATE_INACTIVE);
      end
   end
   //if commander has given fob then this locker is open
   if (map_var(MVAR_Open_Sesame) == 1) then begin
      //only want to open up one locker...not all lockers in Navarro
      if (tile_num(self_obj) == COMMANDER_LOCKER) then begin
         set_local_var(LVAR_Locked, STATE_INACTIVE);
      end
   end
   //if quincy has given plans then this locker is open
   if (map_var(MVAR_See_Me) == 1) then begin
      //only want to open up one locker...not all lockers in Navarro
      if (tile_num(self_obj) == QUINCY_LOCKER) then begin
         set_local_var(LVAR_Locked, STATE_INACTIVE);
      end
   end
   //tell the critter guarding me that someone is messing with me
   //display_msg("don't touch me there!");
   add_timer_event(self_obj,game_ticks(2),0);
end

procedure Set_Lock begin
/* Locks_Roll is a global variable to this script, defined at the beginning
   of the script. */

   Locks_Roll:=roll_vs_skill(source_obj,SKILL_LOCKPICK,Lock_Bonus);

   call Lock_It;
end

procedure Unlock_Lock begin
/* Locks_Roll is a global variable to this script, defined at the beginning
   of the script. */

   Locks_Roll:=roll_vs_skill(source_obj,SKILL_LOCKPICK,Lock_Bonus);

   call Lockpick_It;
end

procedure Lockpick_It begin
   if (is_success(Locks_Roll)) then begin
       set_local_var(LVAR_Locked, STATE_INACTIVE);              // Door is unlocked
       obj_unlock(self_obj);                                    // engine unlock door

       if (source_obj == dude_obj) then begin
           display_msg(mstr(170));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(173));
       end

       if (local_var(LVAR_Gave_Locks_XP) == 0) then begin
           set_local_var(LVAR_Gave_Locks_XP,1);
           give_xp(Lockpick_Exp);
       end
   end

   else if (is_critical(Locks_Roll)) then begin
       jam_lock(self_obj);

       if (source_obj == dude_obj) then begin
           display_msg(mstr(171));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(174));
       end
   end

   else begin
       if (source_obj == dude_obj) then begin
           display_msg(mstr(172));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(175));
       end
   end
end

procedure Lock_It begin
   if (is_success(Locks_Roll)) then begin
       set_local_var(LVAR_Locked, STATE_ACTIVE);                // Door is unlocked
       obj_lock(self_obj);                                      // engine unlock door

       if (source_obj == dude_obj) then begin
           display_msg(mstr(189));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(191));
       end

       if (local_var(LVAR_Gave_Locks_XP) == 0) then begin
           set_local_var(LVAR_Gave_Locks_XP,1);
           give_xp(Lockpick_Exp);
       end
   end

   else begin
       if (source_obj == dude_obj) then begin
           display_msg(mstr(190));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(192));
       end
   end
end

procedure Pry_It begin
   //Stat_Roll:=do_check(source_obj,STAT_st,Crowbar_Bonus);
   Stat_Roll:=do_check(source_obj,STAT_st,0);

   if (is_success(Stat_Roll)) then begin
       set_local_var(LVAR_Locked, STATE_INACTIVE);
       obj_unlock(self_obj);

       if (source_obj == dude_obj) then begin
           display_msg(mstr(176));
       end

       else begin
           display_msg(mstr(181));
       end
   end

   else if (is_critical(Stat_Roll)) then begin
       critter_dmg(source_obj,Crowbar_Strain,(DMG_normal_dam BWOR DMG_BYPASS_ARMOR));

       if (source_obj == dude_obj) then begin
           if (Crowbar_Strain == 1) then begin
               display_msg(mstr(177));
           end
           else begin
               display_msg(mstr(178)+Crowbar_Strain+mstr(179));
           end
       end

       else begin
           if (get_critter_stat(source_obj,STAT_gender) == GENDER_MALE) then begin
               if (Crowbar_Strain == 1) then begin
                   display_msg(mstr(182));
               end
               else begin
                   display_msg(mstr(183)+Crowbar_Strain+mstr(184));
               end
           end

           else begin
               if (Crowbar_Strain == 1) then begin
                   display_msg(mstr(186));
               end
               else begin
                   display_msg(mstr(187)+Crowbar_Strain+mstr(188));
               end
           end
       end
   end

   else begin
       if (source_obj == dude_obj) then begin
           display_msg(mstr(180));
       end

       else begin
           display_msg(mstr(185));
       end
   end
end